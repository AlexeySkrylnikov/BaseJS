/*
Задание 1
Объясните почему код даёт именно такие результаты?
*/

'use strict'
let a = 1, b = 1, c, d;

/*
Пример 1
сначала а = 1, потом мы увеличили значение а на еденицу
используя унарный + и присвоили значение переменной с, которая = 2
*/
c = ++a;
// alert(`Задание 2\nc = ${c}`);

/*
Пример 2
сначала b = 1, затем мы применили для b постфиксный унарный +
и увеличили тем самым b на еденицу, но в присвоится старое значение до увеличения на еденицу, т.е. 1
*/
d = b++;
// alert(`Задание 2\nd = ${d}`);

/*
Пример 3
++a из первого примера была увеличена на 1, в третьем примере мы ее еще раз увеличили на 1 и теперь
а=3, дальше срабатывает сложение 2 + 3 и в итоге с=5
*/

c = 2 + ++a;
//alert(`Задание 2\nc = ${c}`);

/*
Пример 4
d = 4 потому что изначально b = 1, в примере 2 мы увеличили b на 1, 
так как тут используется постфиксный ++, то b все еще равна 2, в итоге d = 4

a = 3, изначально мы присвоили 1, в примере 1 мы а увеличили на 1, теперь а = 2. Далее в примере 3 мы ее еще раз увеличили на 1.
В итоге а = 3ж

b = 3, т.к. b уже была равна двум, происходит увеличение на 1 у b тут d = 2 + b++, в итоге b = 3
*/
d = 2 + b++;
alert(`Задание 1\nd = ${d}\na = ${a}\nb = ${b}`);